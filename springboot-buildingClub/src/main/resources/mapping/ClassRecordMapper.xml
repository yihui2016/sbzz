<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.springboot.springboot.dao.mapper.ClassRecordMapper">
	<resultMap id="BaseResultMap"
		type="com.springboot.springboot.dao.model.ClassRecord">
		<id column="id" property="id" jdbcType="VARCHAR" />
		<result column="user_id" property="userId" jdbcType="VARCHAR" />
		<result column="creation_time" property="creationTime"
			jdbcType="BIGINT" />
		<result column="creator_id" property="creatorId" jdbcType="VARCHAR" />
		<result column="start_time" property="startTime" jdbcType="BIGINT" />
		<result column="end_time" property="endTime" jdbcType="BIGINT" />
		<result column="target" property="target" jdbcType="VARCHAR" />
		<result column="eat_status" property="eatStatus" jdbcType="VARCHAR" />
		<result column="body_status" property="bodyStatus" jdbcType="VARCHAR" />
		<result column="sleep_status" property="sleepStatus" jdbcType="VARCHAR" />
		<result column="brief_info" property="briefInfo" jdbcType="VARCHAR" />
		<result column="after_status" property="afterStatus" jdbcType="VARCHAR" />
		<result column="review" property="review" jdbcType="VARCHAR" />
		<result column="coach_check" property="coachCheck" jdbcType="VARCHAR" />
		<result column="user_check" property="userCheck" jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_id, creation_time, creator_id, start_time, end_time, target,
		eat_status,
		body_status, sleep_status, brief_info, after_status, review, coach_check,
		user_check
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from class_record
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectByUserIdAndStartTimeAndEndTime" resultMap="BaseResultMap">
		select
		<include refid="Base_Column_List" />
		from class_record
		where user_id = #{userId,jdbcType=VARCHAR}
		AND (
		(start_time &lt;= #{startTime,jdbcType=BIGINT} and end_time &gt;=
		#{startTime,jdbcType=BIGINT}) or
		(start_time &lt;=
		#{endTime,jdbcType=BIGINT} and end_time &gt;=
		#{endTime,jdbcType=BIGINT})
		)
		and delete_flag = 0;
	</select>


	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from class_record
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.springboot.springboot.dao.model.ClassRecord">
		insert into class_record (id, user_id, creation_time,
		creator_id, start_time, end_time,
		target, eat_status, body_status,
		sleep_status, brief_info, after_status,
		review, coach_check, user_check
		)
		values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR},
		#{creationTime,jdbcType=BIGINT},
		#{creatorId,jdbcType=VARCHAR}, #{startTime,jdbcType=BIGINT}, #{endTime,jdbcType=BIGINT},
		#{target,jdbcType=VARCHAR}, #{eatStatus,jdbcType=VARCHAR},
		#{bodyStatus,jdbcType=VARCHAR},
		#{sleepStatus,jdbcType=VARCHAR}, #{briefInfo,jdbcType=VARCHAR}, #{afterStatus,jdbcType=VARCHAR},
		#{review,jdbcType=VARCHAR}, #{coachCheck,jdbcType=VARCHAR},
		#{userCheck,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.springboot.springboot.dao.model.ClassRecord">
		insert into class_record
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userId != null">
				user_id,
			</if>
			<if test="creationTime != null">
				creation_time,
			</if>
			<if test="creatorId != null">
				creator_id,
			</if>
			<if test="startTime != null">
				start_time,
			</if>
			<if test="endTime != null">
				end_time,
			</if>
			<if test="target != null">
				target,
			</if>
			<if test="eatStatus != null">
				eat_status,
			</if>
			<if test="bodyStatus != null">
				body_status,
			</if>
			<if test="sleepStatus != null">
				sleep_status,
			</if>
			<if test="briefInfo != null">
				brief_info,
			</if>
			<if test="afterStatus != null">
				after_status,
			</if>
			<if test="review != null">
				review,
			</if>
			<if test="coachCheck != null">
				coach_check,
			</if>
			<if test="userCheck != null">
				user_check,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=VARCHAR},
			</if>
			<if test="userId != null">
				#{userId,jdbcType=VARCHAR},
			</if>
			<if test="creationTime != null">
				#{creationTime,jdbcType=BIGINT},
			</if>
			<if test="creatorId != null">
				#{creatorId,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				#{startTime,jdbcType=BIGINT},
			</if>
			<if test="endTime != null">
				#{endTime,jdbcType=BIGINT},
			</if>
			<if test="target != null">
				#{target,jdbcType=VARCHAR},
			</if>
			<if test="eatStatus != null">
				#{eatStatus,jdbcType=VARCHAR},
			</if>
			<if test="bodyStatus != null">
				#{bodyStatus,jdbcType=VARCHAR},
			</if>
			<if test="sleepStatus != null">
				#{sleepStatus,jdbcType=VARCHAR},
			</if>
			<if test="briefInfo != null">
				#{briefInfo,jdbcType=VARCHAR},
			</if>
			<if test="afterStatus != null">
				#{afterStatus,jdbcType=VARCHAR},
			</if>
			<if test="review != null">
				#{review,jdbcType=VARCHAR},
			</if>
			<if test="coachCheck != null">
				#{coachCheck,jdbcType=VARCHAR},
			</if>
			<if test="userCheck != null">
				#{userCheck,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.springboot.springboot.dao.model.ClassRecord">
		update class_record
		<set>
			<if test="userId != null">
				user_id = #{userId,jdbcType=VARCHAR},
			</if>
			<if test="creationTime != null">
				creation_time = #{creationTime,jdbcType=BIGINT},
			</if>
			<if test="creatorId != null">
				creator_id = #{creatorId,jdbcType=VARCHAR},
			</if>
			<if test="startTime != null">
				start_time = #{startTime,jdbcType=BIGINT},
			</if>
			<if test="endTime != null">
				end_time = #{endTime,jdbcType=BIGINT},
			</if>
			<if test="target != null">
				target = #{target,jdbcType=VARCHAR},
			</if>
			<if test="eatStatus != null">
				eat_status = #{eatStatus,jdbcType=VARCHAR},
			</if>
			<if test="bodyStatus != null">
				body_status = #{bodyStatus,jdbcType=VARCHAR},
			</if>
			<if test="sleepStatus != null">
				sleep_status = #{sleepStatus,jdbcType=VARCHAR},
			</if>
			<if test="briefInfo != null">
				brief_info = #{briefInfo,jdbcType=VARCHAR},
			</if>
			<if test="afterStatus != null">
				after_status = #{afterStatus,jdbcType=VARCHAR},
			</if>
			<if test="review != null">
				review = #{review,jdbcType=VARCHAR},
			</if>
			<if test="coachCheck != null">
				coach_check = #{coachCheck,jdbcType=VARCHAR},
			</if>
			<if test="userCheck != null">
				user_check = #{userCheck,jdbcType=VARCHAR},
			</if>
		</set>
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.springboot.springboot.dao.model.ClassRecord">
		update class_record
		set user_id = #{userId,jdbcType=VARCHAR},
		creation_time = #{creationTime,jdbcType=BIGINT},
		creator_id = #{creatorId,jdbcType=VARCHAR},
		start_time = #{startTime,jdbcType=BIGINT},
		end_time = #{endTime,jdbcType=BIGINT},
		target = #{target,jdbcType=VARCHAR},
		eat_status = #{eatStatus,jdbcType=VARCHAR},
		body_status = #{bodyStatus,jdbcType=VARCHAR},
		sleep_status = #{sleepStatus,jdbcType=VARCHAR},
		brief_info = #{briefInfo,jdbcType=VARCHAR},
		after_status = #{afterStatus,jdbcType=VARCHAR},
		review = #{review,jdbcType=VARCHAR},
		coach_check = #{coachCheck,jdbcType=VARCHAR},
		user_check = #{userCheck,jdbcType=VARCHAR}
		where id = #{id,jdbcType=VARCHAR}
	</update>
</mapper>